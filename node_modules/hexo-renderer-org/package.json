{
  "_args": [
    [
      {
        "raw": "https://github.com/coldnew/hexo-renderer-org#coldnew",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/coldnew/hexo-renderer-org#coldnew",
        "spec": "git+https://github.com/coldnew/hexo-renderer-org.git#coldnew",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:coldnew/hexo-renderer-org.git#coldnew",
          "sshUrl": "git+ssh://git@github.com/coldnew/hexo-renderer-org.git#coldnew",
          "httpsUrl": "git+https://github.com/coldnew/hexo-renderer-org.git#coldnew",
          "gitUrl": "git://github.com/coldnew/hexo-renderer-org.git#coldnew",
          "shortcut": "github:coldnew/hexo-renderer-org#coldnew",
          "directUrl": "https://raw.githubusercontent.com/coldnew/hexo-renderer-org/coldnew/package.json"
        }
      },
      "/Users/iani/Documents/001DEV/SITES/hexo-template"
    ]
  ],
  "_from": "git+https://github.com/coldnew/hexo-renderer-org.git#coldnew",
  "_id": "hexo-renderer-org@0.2.5",
  "_inCache": true,
  "_location": "/hexo-renderer-org",
  "_phantomChildren": {
    "boolbase": "1.0.0",
    "dom-serializer": "0.1.0",
    "domelementtype": "1.3.0",
    "ent": "2.2.0",
    "entities": "1.1.1",
    "htmlparser2": "3.8.3",
    "nth-check": "1.0.1"
  },
  "_requested": {
    "raw": "https://github.com/coldnew/hexo-renderer-org#coldnew",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/coldnew/hexo-renderer-org#coldnew",
    "spec": "git+https://github.com/coldnew/hexo-renderer-org.git#coldnew",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:coldnew/hexo-renderer-org.git#coldnew",
      "sshUrl": "git+ssh://git@github.com/coldnew/hexo-renderer-org.git#coldnew",
      "httpsUrl": "git+https://github.com/coldnew/hexo-renderer-org.git#coldnew",
      "gitUrl": "git://github.com/coldnew/hexo-renderer-org.git#coldnew",
      "shortcut": "github:coldnew/hexo-renderer-org#coldnew",
      "directUrl": "https://raw.githubusercontent.com/coldnew/hexo-renderer-org/coldnew/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/coldnew/hexo-renderer-org.git#37931faedee6b2eb920c7e6f223045efee748b8d",
  "_shasum": "09f7791c8b76ae565f730da4da3131294931139f",
  "_shrinkwrap": null,
  "_spec": "https://github.com/coldnew/hexo-renderer-org#coldnew",
  "_where": "/Users/iani/Documents/001DEV/SITES/hexo-template",
  "author": {
    "name": "codefalling"
  },
  "bugs": {
    "url": "https://github.com/coldnew/hexo-render-org/issues"
  },
  "dependencies": {
    "bufferhelper": "^0.2.1",
    "cheerio": "^0.19.0",
    "hexo-util": "^0.1.7",
    "iconv-lite": "^0.4.13",
    "jsonfile": "^2.2.3",
    "md5": "^2.0.0",
    "mkdirp": "^0.5.1",
    "moment": "^2.10.6",
    "object-assign": "^4.0.1",
    "retry": "^0.10.1",
    "slash": "^1.0.0",
    "tmp": "0.0.31",
    "wait.for": "^0.6.6"
  },
  "description": "Emacs org-mode render plugin for hexo (fork)",
  "devDependencies": {
    "chai": "^3.4.0",
    "mocha": "^2.3.3"
  },
  "gitHead": "37931faedee6b2eb920c7e6f223045efee748b8d",
  "homepage": "https://github.com/coldnew/hexo-render-org#readme",
  "keywords": [
    "hexo",
    "org"
  ],
  "license": "GPL-3.0",
  "main": "index",
  "name": "hexo-renderer-org",
  "optionalDependencies": {},
  "readme": "#+TITLE: hexo-renderer-org (fork)\n\n[[https://circleci.com/gh/coldnew/hexo-renderer-org][https://circleci.com/gh/coldnew/hexo-renderer-org.svg?style=svg]]\n\n[[https://hexo.io][Hexo]] renderer plugin for emacs [[https://orgmode.org/][org-mode]].\n\n[[https://coldnew.github.io/hexo-org-example/2017/03/05/getting-started-with-hexo-and-org-mode/][Getting Started Guide]]\n\n* Table of Contents                                               :TOC_2_gh:\n - [[#why-fork-][Why fork ?]]\n - [[#difference-with-original-one][Difference with original one]]\n - [[#installation][Installation]]\n - [[#options][Options]]\n   - [[#for-highlightjs-user][For highlight.js user]]\n   - [[#for-htmlize-user][For htmlize user]]\n   - [[#full-options-documentation][Full options documentation]]\n - [[#create-post][Create Post]]\n - [[#front-matters][Front-matters]]\n - [[#tutorials][Tutorials]]\n - [[#q--a][Q & A]]\n   - [[#which-org-mode-version-do-you-use-][Which org-mode version do you use ?]]\n   - [[#how-can-i-connect-to-emacs-daemon-][How can I connect to emacs daemon ?]]\n   - [[#how-to-add-read-more-button-][How to add Read more button ?]]\n   - [[#how-to-install-my-emacs-theme][How to install my emacs theme]]\n   - [[#can-i-clean-cachedir-when-use-hexo-clean-][Can I clean cachedir when use hexo clean ?]]\n   - [[#how-can-i-add-line-number-on-src-block-][How can I add line-number on src-block ?]]\n\n* Why fork ?\n\n  Before I start to use [[https://github.com/CodeFalling/hexo-renderer-org][hexo-renderer-org]], I already have another tool called [[https://github.com/coldnew/org-hexo][org-hexo]], which can use org-mode's publish method to generate html code then let [[https://hexo.io][hexo]] renderer it. However, since my posts grow large, the org-publish is more slow then I think. That's why I try the [[https://github.com/CodeFalling/hexo-renderer-org][hexo-renderer-org]].\n\n  The [[https://github.com/CodeFalling/hexo-renderer-org][hexo-renderer-org]] is really greate but it doesn't support use emacs's =htmlize= to render my code block, and that's the main reason I create my fork.\n\n  This fork support *both* [[https://highlightjs.org/][highlight.js]] and [[https://www.emacswiki.org/emacs/Htmlize][htmlize]] to work as syntax highlight backend, you can choose which you like.\n\n  Some features will be PR back to [[https://github.com/CodeFalling/hexo-renderer-org][CodeFalling/hexo-render-org]] one day, but some may not, since this fork is almost totally rewrited.\n\n* Difference with original one\n\n  The main difference is:\n\n  - This fork use =emacs daemon= to speedup render speed.\n  - This fork support use emacs's [[https://www.emacswiki.org/emacs/Htmlize][htmlize]] to syntax highlight your code block.\n  - This fork has better [[https://highlightjs.org/][highlight.js]] support by [[https://github.com/coldnew/hexo-renderer-org/blob/coldnew/emacs/ox-hexo.el#L48][mapping-table]].\n\n* Installation\n\n  Switch to your hexo blog directory and run:\n\n  #+BEGIN_SRC sh\n    npm install https://github.com/coldnew/hexo-renderer-org#coldnew --save\n  #+END_SRC\n\n  Then restart your hexo server.\n\n* Options\n\n  You can configure this plugin in ~_config.yml~ according to the backend you want to use.\n\n** For highlight.js user\n\n   If [[https://highlightjs.org/][highlight.js]] is enough for you, here's the minimal config:\n\n   #+BEGIN_SRC yaml\n     org:\n       emacs: 'emacs'\n       emacsclient: 'emacsclient'\n   #+END_SRC\n\n** For htmlize user\n\n   If you want to use emacs's [[https://www.emacswiki.org/emacs/Htmlize][htmlize]] to syntax highlight your code block, you can use this config instead:\n\n  #+BEGIN_SRC yaml\n    org:\n      emacs: 'emacs'\n      emacsclient: 'emacsclient'\n      htmlize: true       # <--- for htmlize user, this MUST set true\n      theme: 'leuven'\n  #+END_SRC\n\n** Full options documentation\n\n   Some options may not uesed on above example, here's the doc:\n\n  | config      | description                              | default value                                              |\n  |-------------+------------------------------------------+------------------------------------------------------------|\n  | emacs       | executable file of emacs                 | emacs                                                      |\n  | emacsclient | executable file of emacsclient           | emacsclient                                                |\n  | common      | common org content you'll use            | #+OPTIONS: toc:nil num:nil\\n#+BIND: org-html-postamble nil |\n  | cachedir    | where cache file located                 | ./hexo-org-cache/                                          |\n  | clean_cache | set true to clean cache by 'hexo clean'  | false                                                      |\n  | theme       | emacs's theme you want to use            |                                                            |\n  | user_config | extra emacs config you want to load      |                                                            |\n  | htmlize     | use emacs's htmlize to syntax highlight  | false                                                      |\n  | line_number | Enable line-number globally on src-block | false                                                      |\n  | debug       | Show more debug message                  | false                                                      |\n\n* Create Post\n\n  Create =source/_posts/foobar.org= with followin content:\n\n  #+BEGIN_SRC org\n    ,#+TITLE: Hello World\n    ,#+DATE: <2017-03-05 Sun 08:52>\n    ,#+LAYOUT: post\n    ,#+CATEGORIES: org-mode\n    ,#+TAGS: hexo, org-mode\n\n    Welcome to [[https://github.com/coldnew/hexo-renderer-org][coldnew/hexo-renderer-org]]!\n\n    ,#+HTML: <!-- more -->\n\n    You also can add some code block:\n\n    ,#+BEGIN_SRC js\n      console.log(\"hi\");\n    ,#+END_SRC\n  #+END_SRC\n* Front-matters\n\n  [[https://orgmode.org/][org-mode]] has it's own way to describe the [[https://hexo.io/docs/front-matter.html][front-matter]].\n\n  | Front-matter | org-mode     | value                                                      |\n  |--------------+--------------+------------------------------------------------------------|\n  | layout       | #+LAYOUT     | post/page                                                  |\n  | title        | #+TITLE      | string                                                     |\n  | date         | #+DATE       | <2017-04-15 Sat 12:30>, use ~M-x org-time-stamp~ to insert |\n  | updated      | #+UPDATED    | <2017-04-15 Sat 12:30>, use ~M-x org-time-stamp~ to insert |\n  | comments     | #+COMMENTS   | yes/no                                                     |\n  | tags         | #+TAGS       | tag1, tag2, tag3                                           |\n  | categories   | #+CATEGORIES | string                                                     |\n\n  To insert date in org-mode, the default keybinding is =C-c .=, you can also use =C-u C-c .= instead.\n\n* Tutorials\n\n  For more tutorials, please see:\n\n  - [[https://coldnew.github.io/hexo-org-example/2017/03/05/getting-started-with-hexo-and-org-mode/][Getting started with hexo and org-mode]]\n\n* Q & A\n\n** Which org-mode version do you use ?\n\n   This renderer *ONLY* support =org-mode 9.x= syntax, be careful there's some [[http://orgmode.org/Changes.html][conflict]] with org-mode 9.x and 8.x.\n\n   If you really want to use org-mode 8.x, here's the [[https://coldnew.github.io/hexo-org-example/2017/04/26/tips-for-org-mode-8-user/][guide.]]\n\n** How can I connect to emacs daemon ?\n\n   [[https://github.com/coldnew/hexo-renderer-org][hexo-renderer-org]] create a emacs daemon named =hexo-renderer-org=, you can connect the daemone via following command for debug purpose:\n\n   #+BEGIN_SRC sh\n     emacsclient -nw -s hexo-renderer-org\n   #+END_SRC\n\n** How to add Read more button ?\n\n   Place =#+HTML: <!-- more -->= in where you would like to add a ~Read more~.\n\n** How to install my emacs theme\n\n   If the emacs theme you want to use is not installed by default, you can setup the ~_config.yml~\n\n   For example, if we want to use [[https://github.com/kuanyui/moe-theme.el][moe-theme]] for your code block, we need to edit =_config.yml= like this:\n\n   #+BEGIN_SRC yaml\n       org:\n         # skip ...\n         theme: 'moe-dark'\n         user_config: './emacs/init.el'\n   #+END_SRC\n\n   Then add following code to your =./emacs/init.el=.\n\n   #+BEGIN_SRC emacs-lisp\n     ;; install moe-theme and use it\n     (package-install 'moe-theme)\n     (require 'moe-theme)\n   #+END_SRC\n\n** Can I clean cachedir when use hexo clean ?\n\n   If you want to make =hexo clean= work with [[https://github.com/coldnew/hexo-renderer-org][hexo-renderer-org]], you can setup your ~_config.yml~.\n\n   #+BEGIN_SRC yaml\n       org:\n         # skip ...\n         clean_cache: true\n   #+END_SRC\n\n   Note that the emacs-lisp cache in cachedir will be kept after =hexo clean=, you can manually remove it if you want to re-fetch all emacs-lisp plugin.\n** How can I add line-number on src-block ?\n\n   You can add following to your =_config.yml= to make line-number display on your src-block globally:\n\n   #+BEGIN_SRC yaml\n      org:\n        # Make src-block has line-number (this won't make effect on example-block)\n        line_number: true\n   #+END_SRC\n\n   Or use org-mode's [[http://orgmode.org/manual/Literal-examples.html][standard method]] to add line-number manually:\n\n   #+BEGIN_SRC org\n     ,#+BEGIN_SRC js -n\n        console.log(\"This is line 1\")\n     ,#+END_SRC\n   #+END_SRC\n",
  "readmeFilename": "README.org",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/coldnew/hexo-render-org.git"
  },
  "scripts": {
    "test": "mocha test/index.js"
  },
  "version": "0.2.5"
}
